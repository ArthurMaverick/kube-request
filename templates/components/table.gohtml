{{ define "table" }}
<!-- Add JavaScript for search functionality -->
<script>
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

function filterTable() {
    const searchInput = document.getElementById('search');
    const filter = searchInput.value.toLowerCase();
    const rows = document.querySelectorAll('table tbody tr');
    let visibleCount = 0;

    rows.forEach(row => {
        const deploymentName = row.querySelector('td:first-child').textContent.toLowerCase();
        const shouldShow = deploymentName.includes(filter);
        row.style.display = shouldShow ? '' : 'none';
        if (shouldShow) visibleCount++;
    });

    // Update results count
    document.getElementById('visible-count').textContent = visibleCount;
}

// Initialize search functionality
document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search');
    const debouncedFilter = debounce(filterTable, 300);
    
    searchInput.addEventListener('input', debouncedFilter);

    // Add clear button functionality
    const clearButton = document.getElementById('clear-search');
    if (clearButton) {
        clearButton.addEventListener('click', () => {
            searchInput.value = '';
            filterTable();
            searchInput.focus();
        });
    }
});
</script>

<div class="max-w-[90rem] mx-auto px-4 sm:px-6 lg:px-8 pb-8">

  <div class="bg-storm-darker rounded-lg shadow-xl border border-gray-800 overflow-hidden">
    <!-- Header Section -->
    <div class="p-6 border-b border-gray-800">
      <div class="flex flex-col space-y-6">
        <!-- Title and Quick Stats -->
        <div class="flex items-center justify-between">
          <h2 class="text-xl font-semibold text-white flex items-center space-x-2">
            <svg class="w-5 h-5 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
            <span>{{ .Title }}</span>
          </h2>
          <div class="flex items-center space-x-2">
            <span class="px-3 py-1 text-xs font-medium bg-storm-blue/10 text-storm-blue rounded-full">
              {{ .CurrentNamespace }}
            </span>
            <span class="px-3 py-1 text-xs font-medium bg-gray-800 text-gray-300 rounded-full">
              {{ len .Aggregator.PodList }} Deployments
            </span>
          </div>
        </div>

        <!-- Filters Section -->
        <div class="grid grid-cols-1 md:grid-cols-12 gap-4 items-start">
          <!-- Search Form -->
          <form method="GET" action="/" class="md:col-span-8 grid grid-cols-1 sm:grid-cols-12 gap-4" id="search-form">
            <!-- Search Input -->
            <div class="relative sm:col-span-5">
              <label for="search" class="block text-xs font-medium text-gray-400 mb-1">Search Deployments</label>
              <div class="relative group">
                <input
                  type="text"
                  id="search"
                  name="filter"
                  value="{{ .Filter }}"
                  placeholder="Enter deployment name..."
                  class="w-full bg-gray-800/50 text-white rounded-lg pl-10 pr-10 py-2.5 focus:outline-none focus:ring-2 focus:ring-storm-blue focus:bg-gray-800 border border-gray-700 placeholder-gray-500 transition-colors"
                  autocomplete="off"
                />
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <!-- Clear button -->
                <button
                  type="button"
                  id="clear-search"
                  class="absolute inset-y-0 right-0 pr-3 flex items-center opacity-0 group-hover:opacity-100 focus:opacity-100 transition-opacity"
                >
                  <svg class="w-5 h-5 text-gray-500 hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              <!-- Search suggestions (if needed) -->
              <div id="search-suggestions" class="absolute w-full mt-1 bg-gray-800 rounded-lg shadow-lg border border-gray-700 hidden">
                <!-- Suggestions will be populated by JavaScript -->
              </div>
            </div>

            <!-- Namespace Select -->
            <div class="sm:col-span-4">
              <label for="namespace" class="block text-xs font-medium text-gray-400 mb-1">Namespace</label>
              <div class="relative">
                <select
                  id="namespace"
                  name="namespace"
                  class="w-full bg-gray-800/50 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-storm-blue focus:bg-gray-800 border border-gray-700 appearance-none transition-colors"
                  onchange="this.form.submit()"
                >
                  {{ range .AllNamespaces }}
                  <option value="{{ . }}" {{ if eq . $.CurrentNamespace }}selected{{ end }}>{{ . }}</option>
                  {{ end }}
                </select>
                <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                  <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </div>
            </div>

            <!-- Apply Button -->
            <div class="sm:col-span-3 flex items-end">
              <button type="submit" class="w-full bg-storm-blue hover:bg-storm-blue-light text-white px-4 py-2.5 rounded-lg text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-storm-blue flex items-center justify-center space-x-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                </svg>
                <span>Apply Filters</span>
              </button>
            </div>
          </form>

          <!-- Context Form -->
          <form method="POST" action="/change-context" class="md:col-span-4">
            <label for="kubecontext" class="block text-xs font-medium text-gray-400 mb-1">Kubernetes Context</label>
            <div class="relative">
              <select
                id="kubecontext"
                name="kubecontext"
                class="w-full bg-gray-800/50 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-storm-blue focus:bg-gray-800 border border-gray-700 appearance-none transition-colors"
                onchange="this.form.submit()"
              >
                {{ range .AllKubeContexts }}
                <option value="{{ . }}" {{ if eq . $.CurrentKubeContext }}selected{{ end }}>{{ . }}</option>
                {{ end }}
              </select>
              <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- Error Message -->
    {{ if .ErrorMessage }}
    <div class="p-4 bg-red-500/10 border-l-4 border-red-500">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm text-red-400">{{ .ErrorMessage }}</p>
        </div>
      </div>
    </div>
    {{ end }}

    <!-- Table Section -->
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-800">
        <thead class="bg-gray-800/50">
          <tr>
            <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[16%]">Deployment</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[7%]">Status</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[5%]">Replicas</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[14%]">CPU Limit</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[14%]">Memory Limit</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[14%]">CPU Request</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[14%]">Memory Request</th>
            <th scope="col" class="px-2 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider w-[16%]">Recommendations</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-800">
          {{ range .Aggregator.PodList }}
          <tr class="hover:bg-gray-800/50 transition-colors">
            <td class="px-4 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <span class="w-2 h-2 rounded-full {{ if gt (float64 .CurrentCPUUsage) 0.0 }}bg-emerald-400{{ else }}bg-yellow-400{{ end }}"></span>
                </div>
                <div class="ml-2">
                  <div class="text-sm font-medium text-white">{{ .DeploymentName }}</div>
                  <div class="text-xs text-gray-500">{{ $.CurrentNamespace }}</div>
                </div>
              </div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <span class="px-2 py-1 text-xs font-medium rounded-full 
                {{ if gt (float64 .CurrentCPUUsage) 0.0 }}bg-emerald-400/10 text-emerald-400{{ else }}bg-yellow-400/10 text-yellow-400{{ end }}">
                {{ if gt (float64 .CurrentCPUUsage) 0.0 }}Running{{ else }}Pending{{ end }}
              </span>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="text-sm text-gray-300">{{ .Replicas }}</div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-1">
                  {{ if .CpuLimit }}
                  {{ $cpuUsage := float64 .CurrentCPUUsage }}
                  {{ $cpuLimit := float64 .CpuLimit }}
                  {{ if gt $cpuLimit 0.0 }}
                  {{ $cpuPercentage := mul (div $cpuUsage $cpuLimit) 100 }}
                  {{ $cpuBarWidth := min $cpuPercentage 100 }}
                  <div class="mt-2 bg-gray-800/50 rounded-lg p-2 text-xs space-y-1.5">
                    <div class="flex items-center space-x-2">
                      <div class="w-full bg-gray-700 rounded-full h-1.5">
                        <div class="h-1.5 rounded-full {{ if le $cpuPercentage 40.0 }}bg-emerald-300{{ else if and (gt $cpuPercentage 40.0) (le $cpuPercentage 70.0) }}bg-emerald-600{{ else if and (gt $cpuPercentage 70.0) (le $cpuPercentage 81.0) }}bg-yellow-400{{ else if and (gt $cpuPercentage 81.0) (le $cpuPercentage 92.0) }}bg-orange-400{{ else if and (gt $cpuPercentage 92.0) (le $cpuPercentage 100.0) }}bg-red-500{{ else }}bg-purple-500{{ end }}"
                             style="width: {{ if eq $cpuBarWidth 0.0 }}2%{{ else }}{{ printf "%.0f%%" $cpuBarWidth }}{{ end }}">
                        </div>
                      </div>
                      <div class="text-xs {{ if le $cpuPercentage 40.0 }}text-emerald-300{{ else if and (gt $cpuPercentage 40.0) (le $cpuPercentage 70.0) }}text-emerald-600{{ else if and (gt $cpuPercentage 70.0) (le $cpuPercentage 81.0) }}text-yellow-400{{ else if and (gt $cpuPercentage 81.0) (le $cpuPercentage 92.0) }}text-orange-400{{ else if and (gt $cpuPercentage 92.0) (le $cpuPercentage 100.0) }}text-red-500{{ else }}text-purple-500{{ end }} font-medium whitespace-nowrap">
                        {{ printf "%.0f%%" $cpuPercentage }}
                      </div>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        <span class="text-gray-400">Current{{ if gt .Replicas 1 }} (avg){{ end }}</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fm" (div (float64 .CurrentCPUUsage) (float64 .Replicas)) }}</span>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                        </svg>
                        <span class="text-gray-400">Limit</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%dm" .CpuLimit }}</span>
                    </div>
                    <div class="pt-1 border-t border-gray-700">
                      <span class="text-gray-500">
                        {{ if gt $cpuPercentage 100.0 }}Over allocated
                        {{ else if gt $cpuPercentage 92.0 }}Critical usage
                        {{ else if and (gt $cpuPercentage 81.0) (le $cpuPercentage 92.0) }}High usage
                        {{ else if and (gt $cpuPercentage 70.0) (le $cpuPercentage 81.0) }}Moderate usage
                        {{ else if and (gt $cpuPercentage 40.0) (le $cpuPercentage 70.0) }}Good usage
                        {{ else }}Low usage{{ end }}
                      </span>
                    </div>
                  </div>
                  {{ end }}
                  {{ else }}
                  <div class="text-xs text-gray-500">No limit</div>
                  {{ end }}
                </div>
              </div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-1">
                  {{ if .MemoryLimit }}
                  {{ $memUsage := div (float64 .CurrentMemoryUsage) (float64 .Replicas) }}
                  {{ $memLimit := float64 .MemoryLimit }}
                  {{ if gt $memLimit 0.0 }}
                  {{ $memPercentage := mul (div $memUsage $memLimit) 100 }}
                  {{ $memBarWidth := min $memPercentage 100 }}
                  <div class="mt-2 bg-gray-800/50 rounded-lg p-2 text-xs space-y-1.5">
                    <div class="flex items-center space-x-2">
                      <div class="w-full bg-gray-700 rounded-full h-1.5">
                        <div class="h-1.5 rounded-full {{ if le $memPercentage 40.0 }}bg-emerald-300{{ else if and (gt $memPercentage 40.0) (le $memPercentage 70.0) }}bg-emerald-600{{ else if and (gt $memPercentage 70.0) (le $memPercentage 81.0) }}bg-yellow-400{{ else if and (gt $memPercentage 81.0) (le $memPercentage 92.0) }}bg-orange-400{{ else if and (gt $memPercentage 92.0) (le $memPercentage 100.0) }}bg-red-500{{ else }}bg-purple-500{{ end }}"
                             style="width: {{ if eq $memBarWidth 0.0 }}2%{{ else }}{{ printf "%.0f%%" $memBarWidth }}{{ end }}">
                        </div>
                      </div>
                      <div class="text-xs {{ if le $memPercentage 40.0 }}text-emerald-300{{ else if and (gt $memPercentage 40.0) (le $memPercentage 70.0) }}text-emerald-600{{ else if and (gt $memPercentage 70.0) (le $memPercentage 81.0) }}text-yellow-400{{ else if and (gt $memPercentage 81.0) (le $memPercentage 92.0) }}text-orange-400{{ else if and (gt $memPercentage 92.0) (le $memPercentage 100.0) }}text-red-500{{ else }}text-purple-500{{ end }} font-medium whitespace-nowrap">
                        {{ printf "%.0f%%" $memPercentage }}
                      </div>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        <span class="text-gray-400">Current{{ if gt .Replicas 1 }} (avg){{ end }}</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fMi" (div (float64 .CurrentMemoryUsage) (float64 .Replicas)) }}</span>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                        </svg>
                        <span class="text-gray-400">Limit</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fMi" .MemoryLimit }}</span>
                    </div>
                    <div class="pt-1 border-t border-gray-700">
                      <span class="text-gray-500">
                        {{ if gt $memPercentage 100.0 }}Over allocated
                        {{ else if gt $memPercentage 92.0 }}Critical usage
                        {{ else if and (gt $memPercentage 81.0) (le $memPercentage 92.0) }}High usage
                        {{ else if and (gt $memPercentage 70.0) (le $memPercentage 81.0) }}Moderate usage
                        {{ else if and (gt $memPercentage 40.0) (le $memPercentage 70.0) }}Good usage
                        {{ else }}Low usage{{ end }}
                      </span>
                    </div>
                  </div>
                  {{ end }}
                  {{ else }}
                  <div class="text-xs text-gray-500">No limit</div>
                  {{ end }}
                </div>
              </div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-1">
                  {{ if not .CpuRequest }}
                  <div class="text-xs text-gray-500">No request</div>
                  {{ else }}
                  {{ $cpuUsage := float64 .CurrentCPUUsage }}
                  {{ $cpuRequest := float64 .CpuRequest }}
                  {{ if gt $cpuRequest 0.0 }}
                  {{ $cpuEfficiency := mul (div (div $cpuUsage (float64 .Replicas)) $cpuRequest) 100 }}
                  {{ $barWidth := min $cpuEfficiency 100 }}
                  <div class="mt-2 bg-gray-800/50 rounded-lg p-2 text-xs space-y-1.5">
                    <div class="flex items-center space-x-2">
                      <div class="w-full bg-gray-700 rounded-full h-1.5">
                        <div class="h-1.5 rounded-full {{ if le $cpuEfficiency 40.0 }}bg-emerald-300{{ else if and (gt $cpuEfficiency 40.0) (le $cpuEfficiency 70.0) }}bg-emerald-600{{ else if and (gt $cpuEfficiency 70.0) (le $cpuEfficiency 81.0) }}bg-yellow-400{{ else if and (gt $cpuEfficiency 81.0) (le $cpuEfficiency 92.0) }}bg-orange-400{{ else if and (gt $cpuEfficiency 92.0) (le $cpuEfficiency 100.0) }}bg-red-500{{ else }}bg-purple-500{{ end }}"
                             style="width: {{ if eq $barWidth 0.0 }}2%{{ else }}{{ printf "%.0f%%" $barWidth }}{{ end }}">
                        </div>
                      </div>
                      <div class="text-xs {{ if le $cpuEfficiency 40.0 }}text-emerald-300{{ else if and (gt $cpuEfficiency 40.0) (le $cpuEfficiency 70.0) }}text-emerald-600{{ else if and (gt $cpuEfficiency 70.0) (le $cpuEfficiency 81.0) }}text-yellow-400{{ else if and (gt $cpuEfficiency 81.0) (le $cpuEfficiency 92.0) }}text-orange-400{{ else if and (gt $cpuEfficiency 92.0) (le $cpuEfficiency 100.0) }}text-red-500{{ else }}text-purple-500{{ end }} font-medium whitespace-nowrap">
                        {{ printf "%.0f%%" $cpuEfficiency }}
                      </div>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        <span class="text-gray-400">Current{{ if gt .Replicas 1 }} (avg){{ end }}</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fm" (div (float64 .CurrentCPUUsage) (float64 .Replicas)) }}</span>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 11l5-5m0 0l5 5m-5-5v12" />
                        </svg>
                        <span class="text-gray-400">Request</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%dm" .CpuRequest }}</span>
                    </div>
                    <div class="pt-1 border-t border-gray-700">
                      <span class="text-gray-500">
                        {{ if gt $cpuEfficiency 100.0 }}Over allocated
                        {{ else if gt $cpuEfficiency 92.0 }}Critical usage
                        {{ else if and (gt $cpuEfficiency 81.0) (le $cpuEfficiency 92.0) }}High usage
                        {{ else if and (gt $cpuEfficiency 70.0) (le $cpuEfficiency 81.0) }}Moderate usage
                        {{ else if and (gt $cpuEfficiency 40.0) (le $cpuEfficiency 70.0) }}Good usage
                        {{ else }}Low usage{{ end }}
                      </span>
                    </div>
                  </div>
                  {{ end }}
                  {{ end }}
                </div>
              </div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-1">
                  {{ if not .MemoryRequest }}
                  <div class="text-xs text-gray-500">No request</div>
                  {{ else }}
                  {{ $memUsage := div (float64 .CurrentMemoryUsage) (float64 .Replicas) }}
                  {{ $memRequest := float64 .MemoryRequest }}
                  {{ if gt $memRequest 0.0 }}
                  {{ $memEfficiency := mul (div $memUsage $memRequest) 100 }}
                  {{ $barWidth := min $memEfficiency 100 }}
                  <div class="mt-2 bg-gray-800/50 rounded-lg p-2 text-xs space-y-1.5">
                    <div class="flex items-center space-x-2">
                      <div class="w-full bg-gray-700 rounded-full h-1.5">
                        <div class="h-1.5 rounded-full {{ if le $memEfficiency 40.0 }}bg-emerald-300{{ else if and (gt $memEfficiency 40.0) (le $memEfficiency 70.0) }}bg-emerald-600{{ else if and (gt $memEfficiency 70.0) (le $memEfficiency 81.0) }}bg-yellow-400{{ else if and (gt $memEfficiency 81.0) (le $memEfficiency 92.0) }}bg-orange-400{{ else if and (gt $memEfficiency 92.0) (le $memEfficiency 100.0) }}bg-red-500{{ else }}bg-purple-500{{ end }}"
                             style="width: {{ if eq $barWidth 0.0 }}2%{{ else }}{{ printf "%.0f%%" $barWidth }}{{ end }}">
                        </div>
                      </div>
                      <div class="text-xs {{ if le $memEfficiency 40.0 }}text-emerald-300{{ else if and (gt $memEfficiency 40.0) (le $memEfficiency 70.0) }}text-emerald-600{{ else if and (gt $memEfficiency 70.0) (le $memEfficiency 81.0) }}text-yellow-400{{ else if and (gt $memEfficiency 81.0) (le $memEfficiency 92.0) }}text-orange-400{{ else if and (gt $memEfficiency 92.0) (le $memEfficiency 100.0) }}text-red-500{{ else }}text-purple-500{{ end }} font-medium whitespace-nowrap">
                        {{ printf "%.0f%%" $memEfficiency }}
                      </div>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        <span class="text-gray-400">Current{{ if gt .Replicas 1 }} (avg){{ end }}</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fMi" (div (float64 .CurrentMemoryUsage) (float64 .Replicas)) }}</span>
                    </div>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 11l5-5m0 0l5 5m-5-5v12" />
                        </svg>
                        <span class="text-gray-400">Request</span>
                      </div>
                      <span class="font-medium text-white">{{ printf "%.0fMi" .MemoryRequest }}</span>
                    </div>
                    <div class="pt-1 border-t border-gray-700">
                      <span class="text-gray-500">
                        {{ if gt $memEfficiency 100.0 }}Over allocated
                        {{ else if gt $memEfficiency 92.0 }}Critical usage
                        {{ else if and (gt $memEfficiency 81.0) (le $memEfficiency 92.0) }}High usage
                        {{ else if and (gt $memEfficiency 70.0) (le $memEfficiency 81.0) }}Moderate usage
                        {{ else if and (gt $memEfficiency 40.0) (le $memEfficiency 70.0) }}Good usage
                        {{ else }}Low usage{{ end }}
                      </span>
                    </div>
                  </div>
                  {{ end }}
                  {{ end }}
                </div>
              </div>
            </td>
            <td class="px-2 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-1">
                  <div class="bg-gray-800/50 rounded-lg p-2 text-xs">
                    {{ $avgCPUUsage := div (float64 .CurrentCPUUsage) (float64 .Replicas) }}
                    {{ $avgMemUsage := div (float64 .CurrentMemoryUsage) (float64 .Replicas) }}
                    {{ $cpuEfficiency := 0.0 }}
                    {{ $memEfficiency := 0.0 }}
                    {{ $cpuUsagePercent := 0.0 }}
                    {{ $memUsagePercent := 0.0 }}

                    {{ if and .CpuRequest (gt (float64 .CpuRequest) 0.0) }}
                      {{ $cpuEfficiency = mul (div $avgCPUUsage (float64 .CpuRequest)) 100 }}
                    {{ end }}
                    {{ if and .MemoryRequest (gt (float64 .MemoryRequest) 0.0) }}
                      {{ $memEfficiency = mul (div $avgMemUsage (float64 .MemoryRequest)) 100 }}
                    {{ end }}
                    {{ if and .CpuLimit (gt (float64 .CpuLimit) 0.0) }}
                      {{ $cpuUsagePercent = mul (div $avgCPUUsage (float64 .CpuLimit)) 100 }}
                    {{ end }}
                    {{ if and .MemoryLimit (gt (float64 .MemoryLimit) 0.0) }}
                      {{ $memUsagePercent = mul (div $avgMemUsage (float64 .MemoryLimit)) 100 }}
                    {{ end }}

                    <!-- Recommendations -->
                    {{ if or (gt $cpuEfficiency 100.0) (gt $memEfficiency 100.0) (gt $cpuUsagePercent 90.0) (gt $memUsagePercent 90.0) }}
                      <div class="flex items-center space-x-1.5 mb-2">
                        <svg class="w-4 h-4 text-red-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                        </svg>
                        <span class="text-gray-400 font-medium">Adjustments Needed</span>
                      </div>

                      {{ if or (gt $cpuEfficiency 100.0) (gt $cpuUsagePercent 90.0) }}
                      <div class="border-t border-gray-700 mt-2 pt-2">
                        <div class="flex items-center space-x-1.5 mb-1">
                          <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                          </svg>
                          <span class="text-gray-300">CPU</span>
                        </div>
                        <div class="pl-6 space-y-1">
                          {{ if gt $cpuEfficiency 100.0 }}
                          <div class="flex items-center justify-between text-xs">
                            <span class="text-gray-400">Request:</span>
                            <div class="flex items-center space-x-1">
                              <span class="text-gray-400">{{ printf "%.0fm" .CpuRequest }}</span>
                              <span class="text-gray-500">→</span>
                              <span class="text-red-400">{{ printf "%.0fm" (mul $avgCPUUsage 1.2) }}</span>
                            </div>
                          </div>
                          {{ end }}
                          {{ if gt $cpuUsagePercent 90.0 }}
                          <div class="flex items-center justify-between text-xs">
                            <span class="text-gray-400">Limit:</span>
                            <div class="flex items-center space-x-1">
                              <span class="text-gray-400">{{ printf "%.0fm" .CpuLimit }}</span>
                              <span class="text-gray-500">→</span>
                              <span class="text-red-400">{{ printf "%.0fm" (mul (mul $avgCPUUsage 1.2) 1.5) }}</span>
                            </div>
                          </div>
                          {{ end }}
                        </div>
                      </div>
                      {{ end }}

                      {{ if or (gt $memEfficiency 100.0) (gt $memUsagePercent 90.0) }}
                      <div class="border-t border-gray-700 mt-2 pt-2">
                        <div class="flex items-center space-x-1.5 mb-1">
                          <svg class="w-4 h-4 text-storm-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                          </svg>
                          <span class="text-gray-300">Memory</span>
                        </div>
                        <div class="pl-6 space-y-1">
                          {{ if gt $memEfficiency 100.0 }}
                          <div class="flex items-center justify-between text-xs">
                            <span class="text-gray-400">Request:</span>
                            <div class="flex items-center space-x-1">
                              <span class="text-gray-400">{{ printf "%.0fMi" .MemoryRequest }}</span>
                              <span class="text-gray-500">→</span>
                              <span class="text-red-400">{{ printf "%.0fMi" (mul $avgMemUsage 1.2) }}</span>
                            </div>
                          </div>
                          {{ end }}
                          {{ if gt $memUsagePercent 90.0 }}
                          <div class="flex items-center justify-between text-xs">
                            <span class="text-gray-400">Limit:</span>
                            <div class="flex items-center space-x-1">
                              <span class="text-gray-400">{{ printf "%.0fMi" .MemoryLimit }}</span>
                              <span class="text-gray-500">→</span>
                              <span class="text-red-400">{{ printf "%.0fMi" (mul (mul $avgMemUsage 1.2) 1.5) }}</span>
                            </div>
                          </div>
                          {{ end }}
                        </div>
                      </div>
                      {{ end }}
                    {{ else }}
                      <div class="flex items-center space-x-1.5">
                        <svg class="w-4 h-4 text-emerald-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span class="text-gray-300">Well Configured</span>
                      </div>
                    {{ end }}
                  </div>
                </div>
              </div>
            </td>
          </tr>
          {{ end }}
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div class="px-6 py-4 border-t border-gray-800 flex items-center justify-between">
      <p class="text-sm text-gray-400">
        Showing <span id="visible-count" class="font-medium text-white">{{ len .Aggregator.PodList }}</span> results
      </p>
    </div>
  </div>
</div>
{{ end }}